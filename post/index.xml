<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hugo tranquilpeak theme</title>
    <link>https://modeyang.github.io/post/</link>
    <description>Recent content in Posts on Hugo tranquilpeak theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Apr 2018 00:53:25 +0800</lastBuildDate>
    
	<atom:link href="https://modeyang.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Metaclass</title>
      <link>https://modeyang.github.io/2018/04/metaclass/</link>
      <pubDate>Tue, 17 Apr 2018 00:53:25 +0800</pubDate>
      
      <guid>https://modeyang.github.io/2018/04/metaclass/</guid>
      <description>&lt;h1 id=&#34;转-http-blog-jobbole-com-21351-深刻理解python中的元类-metaclass&#34;&gt;&lt;a href=&#34;http://blog.jobbole.com/21351/&#34;&gt;(转)&lt;/a&gt;深刻理解Python中的元类(metaclass)&lt;/h1&gt;

&lt;p&gt;在大多数编程语言中，类就是一组用来描述如何生成一个对象的代码段。在Python中这一点仍然成立,但是，Python中的类还远不止如此。类同样也是一种对象。是的，没错，就是对象。只要你使用关键字class，Python解释器在执行的时候就会创建一个对象。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Es_dsl</title>
      <link>https://modeyang.github.io/2018/04/es_dsl/</link>
      <pubDate>Mon, 16 Apr 2018 18:52:26 +0800</pubDate>
      
      <guid>https://modeyang.github.io/2018/04/es_dsl/</guid>
      <description>1. Term query 用于精确查找在inverted index里面，如下面：
GET /_search { &amp;quot;query&amp;quot;: { &amp;quot;bool&amp;quot;: { &amp;quot;should&amp;quot;: [ { &amp;quot;term&amp;quot;: { &amp;quot;status&amp;quot;: { &amp;quot;value&amp;quot;: &amp;quot;urgent&amp;quot;, &amp;quot;boost&amp;quot;: 2.0 } } }, { &amp;quot;term&amp;quot;: { &amp;quot;status&amp;quot;: &amp;quot;normal&amp;quot; } } ] } } }  1.1 原理 String字段可以是analyzed（用于全文搜索）或者not_analyzed（用于精确查找）ï¼Exact values（如数字，日期或者not_analyzed字符串）放在inverted index中是他的本身值。
默认的string字段是可分析的，因此string值首先会被analyzer分解成一系列的term, 然后加入到inverted index中。
默认çanalyzer的工作原理： 1. drops most punctuation
2. breaks up text into individual words, and lower cases them
例如： “Quick Brown Fox!” into the terms [quick, brown, fox].</description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://modeyang.github.io/2018/04/first/</link>
      <pubDate>Mon, 16 Apr 2018 17:49:39 +0800</pubDate>
      
      <guid>https://modeyang.github.io/2018/04/first/</guid>
      <description> Hello Hugo  test hugo  </description>
    </item>
    
  </channel>
</rss>